<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.kdgc</groupId>
  <artifactId>usi-bdma-sqoop</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <properties>

		<!-- Generic properties -->
		<java.version>1.7</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Spring -->
		<spring-framework.version>3.2.4.RELEASE</spring-framework.version>

		<!-- Logging -->
		<slf4j.version>1.7.7</slf4j.version>

		<!-- Test -->
		<junit.version>4.11</junit.version>
		<!-- hadoop version -->
<!-- 		<hadoopVersion>2.6.0-mr1-cdh5.7.0</hadoopVersion> -->
		<hadoopVersion>0.20.2-cdh3u1</hadoopVersion>
	</properties>
	
	<dependencies>
		<!-- Spring and Transactions -->
<!-- 		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring-framework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring-framework.version}</version>
		</dependency> -->
		
		<!-- hadoop -->
		 <dependency>
	      <groupId>org.apache.hadoop</groupId>
	      <artifactId>hadoop-core</artifactId>
	      <version>${hadoopVersion}</version>
	 <!--   <exclusions>
	        <exclusion>
	          <groupId>org.codehaus.jackson</groupId>
	          <artifactId>jackson-core-asl</artifactId>
	        </exclusion>
	        <exclusion>
	          <groupId>org.codehaus.jackson</groupId>
	          <artifactId>jackson-mapper-asl</artifactId>
	        </exclusion> 
	      </exclusions>-->
	    </dependency>
		<!-- sqoop jar -->
<!-- 		<dependency>
		  <groupId>org.apache.sqoop</groupId>
		  <artifactId>sqoop</artifactId>
		  <version>1.4.5</version>
		</dependency>-->
<!-- 		<dependency>
		    <groupId>com.cloudera.cdh</groupId>
		    <artifactId>sqoop-root</artifactId>
		    <version>1.4.6-cdh5.7.0</version>
		</dependency> 
		<dependency>
		    <groupId>com.cloudera.cdh</groupId>
		    <artifactId>sqoop-ant</artifactId>
		    <version>1.4.6-cdh5.7.0</version>
		    <type>pom</type>
		</dependency>  -->
		<!-- sqoop jar in local 引入本地的jar包的时候开启以下依赖-->
		<dependency>
		    <groupId>org.apache.sqoop</groupId>
		    <artifactId>sqoop</artifactId>
		    <version>1.4.6-cdh5.7.0</version>
		    <scope>system</scope>
		    <systemPath>${project.basedir}/src/main/lib/sqoop-1.4.6-cdh5.7.0.jar</systemPath>
		</dependency> 
		<!-- https://mvnrepository.com/artifact/org.apache.sqoop/sqoop -->
		<!-- Logging with Log4J -->
		<!-- https://mvnrepository.com/artifact/log4j/log4j -->
		<!-- 用于序列化和反序列化的包 -->
			<dependency>
			  <groupId>org.apache.avro</groupId>
			  <artifactId>avro</artifactId>
			  <version>1.8.0</version>
			</dependency>
		<!-- ojdbc的驱动 -->
			<dependency>
			  <groupId>ojdbc</groupId>
			  <artifactId>ojdbc</artifactId>
			  <version>14.0.0</version>
			</dependency>
		<!-- Test Artifacts -->
<!-- 		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring-framework.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency> -->
	<!-- 	<dependency>
		    <groupId>org.mortbay.jetty</groupId>
		    <artifactId>jetty</artifactId>
		    <version>6.1.26.cloudera.2</version>
		</dependency> -->
	
		<!-- 缺失的包的集合 -->
	<dependency>
		<groupId>log4j</groupId>
		<artifactId>log4j</artifactId>
		<version>1.2.17</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
	<dependency>
	    <groupId>commons-io</groupId>
	    <artifactId>commons-io</artifactId>
	    <version>2.4</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/org.json/json -->
	<dependency>
	    <groupId>org.json</groupId>
	    <artifactId>json</artifactId>
	    <version>20160810</version>
	</dependency>
	
	</dependencies>	
		<build>
			<plugins>
			<!-- maven打包编译插件（jdk1.7 UTF-8） -->
			<plugin>
			   		<groupId>org.apache.maven.plugins</groupId>
				    <artifactId>maven-jar-plugin</artifactId>
				    <version>2.4</version>
				    <configuration>
					    <source>1.7</source>
		                <target>1.7</target>
				        <archive>
				            <manifest>
				                <mainClass>usi.bdma.client.sqoop.SqoopExport</mainClass>
				                <addClasspath>true</addClasspath>
<!-- 				        在MANIFEST.MF加上Class-Path项并配置依赖包 -->
				            <classpathPrefix>lib/</classpathPrefix>
				            </manifest>
				        </archive>
				    </configuration>
				</plugin>
				<!-- 当引入本地的某个jar包的时候可用以下这种方法解决maven打包问题 -->
<!-- 				<plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <version>2.3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                      
                              有些项目的jar包不是在maven服务器上能够下载的，那么需要将这样的包放在项目的lib目录下，  
                        不过这样会导致maven打包时找不到包，报错。可以通过下面的配置解决这个问题  
                      
                    <compilerArguments>
                        <extdirs>src\main\lib</extdirs>
                    </compilerArguments>
                </configuration>
            </plugin>-->
			</plugins>
	</build>
		<!-- 在pom里面配置mvn远程仓库 -->
		<repositories>
		  <repository>
	        <id>Cloudera</id>
	        <name>Cloudera</name>
<!-- 	        <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url> -->
	        <url>https://repository.cloudera.com/content/repositories/releases/</url>
	        <releases>
	            <enabled>true</enabled>
	        </releases>
	        <snapshots>
	            <enabled>false</enabled>
	        </snapshots>
   		  </repository>
		  <repository>
	        <id>Spring Plugins</id>
	        <name>Spring Plugins</name>
	        <url>http://repo.spring.io/plugins-release/</url>
	        <releases>
	            <enabled>true</enabled>
	        </releases>
	        <snapshots>
	            <enabled>false</enabled>
	        </snapshots>
   		  </repository>
	 	</repositories>
	   <pluginRepositories>
	     <pluginRepository>
	       <id>Cloudera</id>
	        <name>Cloudera</name>
<!-- 	        <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url> -->
	        <url>https://repository.cloudera.com/content/repositories/releases/</url>
	       <releases>
	         <enabled>true</enabled>
	       </releases>
	       <snapshots>
	         <enabled>true</enabled>
	       </snapshots> 
	     </pluginRepository>
	   </pluginRepositories>
</project>
